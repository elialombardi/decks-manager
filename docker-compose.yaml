x-common-variables: &common-variables
  ASPNETCORE_ENVIRONMENT: Development
  rabbitMQ__username: guest
  rabbitMQ__password: guest
  rabbitMQ__host: rabbitmq
  rabbitMQ__virtualHost: /
  JWT__Issuer: https://deck-manager.local.com
  JWT__Audience: https://deck-manager.local.com
  # To generate JWT__SecretKey run openssl rand -base64 64
  JWT__SecretKey: lqgruqLbLX79KEyCAbGt3Y+kAcT5DfE8zTgqxRb1e7E8Bzw6OnSBZbJ6XAsBNBRv1v0LIVVjDq+D5LQh2ABOCg==
  auth__MaxLoginAttempts: 5
  ApiBaseUrl: http://localhost:8080/
  UserService__BaseAddress: http://users-api:8080
  massTransit__usersQueueName: users-queue
  Logging__LogLevel__Api: Debug
  Logging__LogLevel__WebApi: Debug
  Logging__LogLevel__MassTransit: Debug
  ConnectionStrings__decks: Host=postgresql;Port=5432;Database=decks;Username=postgres;Password=postgres
  ConnectionStrings__users: Host=postgresql;Port=5432;Database=users;Username=postgres;Password=postgres
  ConnectionStrings__auth: Host=postgresql;Port=5432;Database=auth;Username=postgres;Password=postgres

services:
  # User Nginx as api gateway
  api-gateway:
    build:
      context: nginx-api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:80
    networks:
      - dm-network
    restart: always
    depends_on:
      - users-api
      - auth-api
      # - decks-api
      # - cards-api
      # - games-api

  users-api:
    build:
      context: services/users
      dockerfile: WebApi/Dockerfile
    environment:
      <<: *common-variables
    networks:
      - dm-network
    depends_on:
      - rabbitmq
    restart: always

  auth-api:
    build:
      context: services/auth
      dockerfile: WebApi/Dockerfile
    environment:
      <<: *common-variables
    networks:
      - dm-network
    depends_on:
      - rabbitmq
    restart: always

  decks-api:
    build:
      context: services/decks
      dockerfile: WebApi/Dockerfile
    environment:
      <<: *common-variables
    networks:
      - dm-network
    depends_on:
      - rabbitmq
    restart: always

  decks-console-app:
    build:
      context: services/decks
      dockerfile: ConsoleApp/Dockerfile
    environment:
      <<: *common-variables
    networks:
      - dm-network
    depends_on:
      - rabbitmq
      - postgresql
    volumes:
    # mount files folder
      - ./files:/app/files
    restart: always
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - dm-network
    restart: always

  postgresql:
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: deck-manager
    shm_size: 128mb
      
    ports:
      - 5432:5432
    networks:
      - dm-network
    volumes:
      - /var/lib/postgresql/data
      - ./pgsql:/docker-entrypoint-initdb.d
    restart: always
  
networks:
  dm-network:
    driver: bridge